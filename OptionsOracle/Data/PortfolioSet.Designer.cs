//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace OptionsOracle.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PortfolioSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PortfolioSet : global::System.Data.DataSet {
        
        private PortfolioTableDataTable tablePortfolioTable;
        
        private SummaryTableDataTable tableSummaryTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PortfolioSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected PortfolioSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PortfolioTable"] != null)) {
                    base.Tables.Add(new PortfolioTableDataTable(ds.Tables["PortfolioTable"]));
                }
                if ((ds.Tables["SummaryTable"] != null)) {
                    base.Tables.Add(new SummaryTableDataTable(ds.Tables["SummaryTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PortfolioTableDataTable PortfolioTable {
            get {
                return this.tablePortfolioTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SummaryTableDataTable SummaryTable {
            get {
                return this.tableSummaryTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            PortfolioSet cln = ((PortfolioSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PortfolioTable"] != null)) {
                    base.Tables.Add(new PortfolioTableDataTable(ds.Tables["PortfolioTable"]));
                }
                if ((ds.Tables["SummaryTable"] != null)) {
                    base.Tables.Add(new SummaryTableDataTable(ds.Tables["SummaryTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablePortfolioTable = ((PortfolioTableDataTable)(base.Tables["PortfolioTable"]));
            if ((initTable == true)) {
                if ((this.tablePortfolioTable != null)) {
                    this.tablePortfolioTable.InitVars();
                }
            }
            this.tableSummaryTable = ((SummaryTableDataTable)(base.Tables["SummaryTable"]));
            if ((initTable == true)) {
                if ((this.tableSummaryTable != null)) {
                    this.tableSummaryTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "PortfolioSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PortfolioSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePortfolioTable = new PortfolioTableDataTable();
            base.Tables.Add(this.tablePortfolioTable);
            this.tableSummaryTable = new SummaryTableDataTable();
            base.Tables.Add(this.tableSummaryTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePortfolioTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSummaryTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PortfolioSet ds = new PortfolioSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PortfolioTableRowChangeEventHandler(object sender, PortfolioTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SummaryTableRowChangeEventHandler(object sender, SummaryTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PortfolioTableDataTable : global::System.Data.TypedTableBase<PortfolioTableRow> {
            
            private global::System.Data.DataColumn columnIndex;
            
            private global::System.Data.DataColumn columnStock;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnStockLastPrice;
            
            private global::System.Data.DataColumn columnStockImpVolatility;
            
            private global::System.Data.DataColumn columnStockHisVolatility;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnNetInvestment;
            
            private global::System.Data.DataColumn columnMaxProfitPotential;
            
            private global::System.Data.DataColumn columnMaxProfitPotentialPrc;
            
            private global::System.Data.DataColumn columnMaxLossRisk;
            
            private global::System.Data.DataColumn columnMaxLossRiskPrc;
            
            private global::System.Data.DataColumn columnLowerBreakeven;
            
            private global::System.Data.DataColumn columnUpperBreakeven;
            
            private global::System.Data.DataColumn columnBreakevenProb;
            
            private global::System.Data.DataColumn columnBreakevenPrice;
            
            private global::System.Data.DataColumn columnReturnIfUnchange;
            
            private global::System.Data.DataColumn columnReturnIfUnchangePrc;
            
            private global::System.Data.DataColumn columnCurrentReturn;
            
            private global::System.Data.DataColumn columnCurrentReturnPrc;
            
            private global::System.Data.DataColumn columnReturnAtTarget;
            
            private global::System.Data.DataColumn columnReturnAtTargetPrc;
            
            private global::System.Data.DataColumn columnExpectedReturn;
            
            private global::System.Data.DataColumn columnExpectedReturnPrc;
            
            private global::System.Data.DataColumn columnInterestPaid;
            
            private global::System.Data.DataColumn columnTotalDelta;
            
            private global::System.Data.DataColumn columnTotalGamma;
            
            private global::System.Data.DataColumn columnTotalTheta;
            
            private global::System.Data.DataColumn columnTotalVega;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnOpoFile;
            
            private global::System.Data.DataColumn columnPortfolioMembership;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioTableDataTable() {
                this.TableName = "PortfolioTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PortfolioTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PortfolioTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IndexColumn {
                get {
                    return this.columnIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockColumn {
                get {
                    return this.columnStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockLastPriceColumn {
                get {
                    return this.columnStockLastPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockImpVolatilityColumn {
                get {
                    return this.columnStockImpVolatility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockHisVolatilityColumn {
                get {
                    return this.columnStockHisVolatility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetInvestmentColumn {
                get {
                    return this.columnNetInvestment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxProfitPotentialColumn {
                get {
                    return this.columnMaxProfitPotential;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxProfitPotentialPrcColumn {
                get {
                    return this.columnMaxProfitPotentialPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxLossRiskColumn {
                get {
                    return this.columnMaxLossRisk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxLossRiskPrcColumn {
                get {
                    return this.columnMaxLossRiskPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LowerBreakevenColumn {
                get {
                    return this.columnLowerBreakeven;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpperBreakevenColumn {
                get {
                    return this.columnUpperBreakeven;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BreakevenProbColumn {
                get {
                    return this.columnBreakevenProb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BreakevenPriceColumn {
                get {
                    return this.columnBreakevenPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReturnIfUnchangeColumn {
                get {
                    return this.columnReturnIfUnchange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReturnIfUnchangePrcColumn {
                get {
                    return this.columnReturnIfUnchangePrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentReturnColumn {
                get {
                    return this.columnCurrentReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentReturnPrcColumn {
                get {
                    return this.columnCurrentReturnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReturnAtTargetColumn {
                get {
                    return this.columnReturnAtTarget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReturnAtTargetPrcColumn {
                get {
                    return this.columnReturnAtTargetPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpectedReturnColumn {
                get {
                    return this.columnExpectedReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpectedReturnPrcColumn {
                get {
                    return this.columnExpectedReturnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InterestPaidColumn {
                get {
                    return this.columnInterestPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalDeltaColumn {
                get {
                    return this.columnTotalDelta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalGammaColumn {
                get {
                    return this.columnTotalGamma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalThetaColumn {
                get {
                    return this.columnTotalTheta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalVegaColumn {
                get {
                    return this.columnTotalVega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OpoFileColumn {
                get {
                    return this.columnOpoFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PortfolioMembershipColumn {
                get {
                    return this.columnPortfolioMembership;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioTableRow this[int index] {
                get {
                    return ((PortfolioTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PortfolioTableRowChangeEventHandler PortfolioTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PortfolioTableRowChangeEventHandler PortfolioTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PortfolioTableRowChangeEventHandler PortfolioTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PortfolioTableRowChangeEventHandler PortfolioTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPortfolioTableRow(PortfolioTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioTableRow AddPortfolioTableRow(
                        string Stock, 
                        string Name, 
                        double StockLastPrice, 
                        double StockImpVolatility, 
                        double StockHisVolatility, 
                        System.DateTime StartDate, 
                        System.DateTime EndDate, 
                        double NetInvestment, 
                        double MaxProfitPotential, 
                        double MaxProfitPotentialPrc, 
                        double MaxLossRisk, 
                        double MaxLossRiskPrc, 
                        double LowerBreakeven, 
                        double UpperBreakeven, 
                        double BreakevenProb, 
                        double BreakevenPrice, 
                        double ReturnIfUnchange, 
                        double ReturnIfUnchangePrc, 
                        double CurrentReturn, 
                        double CurrentReturnPrc, 
                        double ReturnAtTarget, 
                        double ReturnAtTargetPrc, 
                        double ExpectedReturn, 
                        double ExpectedReturnPrc, 
                        double InterestPaid, 
                        double TotalDelta, 
                        double TotalGamma, 
                        double TotalTheta, 
                        double TotalVega, 
                        string Notes, 
                        string OpoFile, 
                        string PortfolioMembership) {
                PortfolioTableRow rowPortfolioTableRow = ((PortfolioTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Stock,
                        Name,
                        StockLastPrice,
                        StockImpVolatility,
                        StockHisVolatility,
                        StartDate,
                        EndDate,
                        NetInvestment,
                        MaxProfitPotential,
                        MaxProfitPotentialPrc,
                        MaxLossRisk,
                        MaxLossRiskPrc,
                        LowerBreakeven,
                        UpperBreakeven,
                        BreakevenProb,
                        BreakevenPrice,
                        ReturnIfUnchange,
                        ReturnIfUnchangePrc,
                        CurrentReturn,
                        CurrentReturnPrc,
                        ReturnAtTarget,
                        ReturnAtTargetPrc,
                        ExpectedReturn,
                        ExpectedReturnPrc,
                        InterestPaid,
                        TotalDelta,
                        TotalGamma,
                        TotalTheta,
                        TotalVega,
                        Notes,
                        OpoFile,
                        PortfolioMembership};
                rowPortfolioTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPortfolioTableRow);
                return rowPortfolioTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioTableRow FindByIndex(int Index) {
                return ((PortfolioTableRow)(this.Rows.Find(new object[] {
                            Index})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PortfolioTableDataTable cln = ((PortfolioTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PortfolioTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIndex = base.Columns["Index"];
                this.columnStock = base.Columns["Stock"];
                this.columnName = base.Columns["Name"];
                this.columnStockLastPrice = base.Columns["StockLastPrice"];
                this.columnStockImpVolatility = base.Columns["StockImpVolatility"];
                this.columnStockHisVolatility = base.Columns["StockHisVolatility"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnNetInvestment = base.Columns["NetInvestment"];
                this.columnMaxProfitPotential = base.Columns["MaxProfitPotential"];
                this.columnMaxProfitPotentialPrc = base.Columns["MaxProfitPotentialPrc"];
                this.columnMaxLossRisk = base.Columns["MaxLossRisk"];
                this.columnMaxLossRiskPrc = base.Columns["MaxLossRiskPrc"];
                this.columnLowerBreakeven = base.Columns["LowerBreakeven"];
                this.columnUpperBreakeven = base.Columns["UpperBreakeven"];
                this.columnBreakevenProb = base.Columns["BreakevenProb"];
                this.columnBreakevenPrice = base.Columns["BreakevenPrice"];
                this.columnReturnIfUnchange = base.Columns["ReturnIfUnchange"];
                this.columnReturnIfUnchangePrc = base.Columns["ReturnIfUnchangePrc"];
                this.columnCurrentReturn = base.Columns["CurrentReturn"];
                this.columnCurrentReturnPrc = base.Columns["CurrentReturnPrc"];
                this.columnReturnAtTarget = base.Columns["ReturnAtTarget"];
                this.columnReturnAtTargetPrc = base.Columns["ReturnAtTargetPrc"];
                this.columnExpectedReturn = base.Columns["ExpectedReturn"];
                this.columnExpectedReturnPrc = base.Columns["ExpectedReturnPrc"];
                this.columnInterestPaid = base.Columns["InterestPaid"];
                this.columnTotalDelta = base.Columns["TotalDelta"];
                this.columnTotalGamma = base.Columns["TotalGamma"];
                this.columnTotalTheta = base.Columns["TotalTheta"];
                this.columnTotalVega = base.Columns["TotalVega"];
                this.columnNotes = base.Columns["Notes"];
                this.columnOpoFile = base.Columns["OpoFile"];
                this.columnPortfolioMembership = base.Columns["PortfolioMembership"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIndex = new global::System.Data.DataColumn("Index", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndex);
                this.columnStock = new global::System.Data.DataColumn("Stock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStock);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnStockLastPrice = new global::System.Data.DataColumn("StockLastPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockLastPrice);
                this.columnStockImpVolatility = new global::System.Data.DataColumn("StockImpVolatility", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockImpVolatility);
                this.columnStockHisVolatility = new global::System.Data.DataColumn("StockHisVolatility", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockHisVolatility);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnNetInvestment = new global::System.Data.DataColumn("NetInvestment", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetInvestment);
                this.columnMaxProfitPotential = new global::System.Data.DataColumn("MaxProfitPotential", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxProfitPotential);
                this.columnMaxProfitPotentialPrc = new global::System.Data.DataColumn("MaxProfitPotentialPrc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxProfitPotentialPrc);
                this.columnMaxLossRisk = new global::System.Data.DataColumn("MaxLossRisk", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxLossRisk);
                this.columnMaxLossRiskPrc = new global::System.Data.DataColumn("MaxLossRiskPrc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxLossRiskPrc);
                this.columnLowerBreakeven = new global::System.Data.DataColumn("LowerBreakeven", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLowerBreakeven);
                this.columnUpperBreakeven = new global::System.Data.DataColumn("UpperBreakeven", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpperBreakeven);
                this.columnBreakevenProb = new global::System.Data.DataColumn("BreakevenProb", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBreakevenProb);
                this.columnBreakevenPrice = new global::System.Data.DataColumn("BreakevenPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBreakevenPrice);
                this.columnReturnIfUnchange = new global::System.Data.DataColumn("ReturnIfUnchange", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnIfUnchange);
                this.columnReturnIfUnchangePrc = new global::System.Data.DataColumn("ReturnIfUnchangePrc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnIfUnchangePrc);
                this.columnCurrentReturn = new global::System.Data.DataColumn("CurrentReturn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentReturn);
                this.columnCurrentReturnPrc = new global::System.Data.DataColumn("CurrentReturnPrc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentReturnPrc);
                this.columnReturnAtTarget = new global::System.Data.DataColumn("ReturnAtTarget", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnAtTarget);
                this.columnReturnAtTargetPrc = new global::System.Data.DataColumn("ReturnAtTargetPrc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnAtTargetPrc);
                this.columnExpectedReturn = new global::System.Data.DataColumn("ExpectedReturn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpectedReturn);
                this.columnExpectedReturnPrc = new global::System.Data.DataColumn("ExpectedReturnPrc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpectedReturnPrc);
                this.columnInterestPaid = new global::System.Data.DataColumn("InterestPaid", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestPaid);
                this.columnTotalDelta = new global::System.Data.DataColumn("TotalDelta", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDelta);
                this.columnTotalGamma = new global::System.Data.DataColumn("TotalGamma", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalGamma);
                this.columnTotalTheta = new global::System.Data.DataColumn("TotalTheta", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTheta);
                this.columnTotalVega = new global::System.Data.DataColumn("TotalVega", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalVega);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnOpoFile = new global::System.Data.DataColumn("OpoFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpoFile);
                this.columnPortfolioMembership = new global::System.Data.DataColumn("PortfolioMembership", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortfolioMembership);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndex}, true));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnOpoFile}, false));
                this.columnIndex.AutoIncrement = true;
                this.columnIndex.AllowDBNull = false;
                this.columnIndex.Unique = true;
                this.columnOpoFile.AllowDBNull = false;
                this.columnOpoFile.Unique = true;
                this.columnPortfolioMembership.Caption = "PortfolioList";
                this.columnPortfolioMembership.DefaultValue = ((string)(""));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioTableRow NewPortfolioTableRow() {
                return ((PortfolioTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PortfolioTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PortfolioTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PortfolioTableRowChanged != null)) {
                    this.PortfolioTableRowChanged(this, new PortfolioTableRowChangeEvent(((PortfolioTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PortfolioTableRowChanging != null)) {
                    this.PortfolioTableRowChanging(this, new PortfolioTableRowChangeEvent(((PortfolioTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PortfolioTableRowDeleted != null)) {
                    this.PortfolioTableRowDeleted(this, new PortfolioTableRowChangeEvent(((PortfolioTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PortfolioTableRowDeleting != null)) {
                    this.PortfolioTableRowDeleting(this, new PortfolioTableRowChangeEvent(((PortfolioTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePortfolioTableRow(PortfolioTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PortfolioSet ds = new PortfolioSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PortfolioTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SummaryTableDataTable : global::System.Data.TypedTableBase<SummaryTableRow> {
            
            private global::System.Data.DataColumn columnIndex;
            
            private global::System.Data.DataColumn columnCriteria;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnTotalPrc;
            
            private global::System.Data.DataColumn columnIsCredit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SummaryTableDataTable() {
                this.TableName = "SummaryTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SummaryTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SummaryTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IndexColumn {
                get {
                    return this.columnIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CriteriaColumn {
                get {
                    return this.columnCriteria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPrcColumn {
                get {
                    return this.columnTotalPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCreditColumn {
                get {
                    return this.columnIsCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SummaryTableRow this[int index] {
                get {
                    return ((SummaryTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SummaryTableRowChangeEventHandler SummaryTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SummaryTableRowChangeEventHandler SummaryTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SummaryTableRowChangeEventHandler SummaryTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SummaryTableRowChangeEventHandler SummaryTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSummaryTableRow(SummaryTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SummaryTableRow AddSummaryTableRow(string Criteria, double Total, double TotalPrc, bool IsCredit) {
                SummaryTableRow rowSummaryTableRow = ((SummaryTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Criteria,
                        Total,
                        TotalPrc,
                        IsCredit};
                rowSummaryTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSummaryTableRow);
                return rowSummaryTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SummaryTableRow FindByCriteria(string Criteria) {
                return ((SummaryTableRow)(this.Rows.Find(new object[] {
                            Criteria})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SummaryTableDataTable cln = ((SummaryTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SummaryTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIndex = base.Columns["Index"];
                this.columnCriteria = base.Columns["Criteria"];
                this.columnTotal = base.Columns["Total"];
                this.columnTotalPrc = base.Columns["TotalPrc"];
                this.columnIsCredit = base.Columns["IsCredit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIndex = new global::System.Data.DataColumn("Index", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndex);
                this.columnCriteria = new global::System.Data.DataColumn("Criteria", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCriteria);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnTotalPrc = new global::System.Data.DataColumn("TotalPrc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPrc);
                this.columnIsCredit = new global::System.Data.DataColumn("IsCredit", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCredit);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCriteria}, true));
                this.columnIndex.AutoIncrement = true;
                this.columnIndex.AllowDBNull = false;
                this.columnCriteria.AllowDBNull = false;
                this.columnCriteria.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SummaryTableRow NewSummaryTableRow() {
                return ((SummaryTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SummaryTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SummaryTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SummaryTableRowChanged != null)) {
                    this.SummaryTableRowChanged(this, new SummaryTableRowChangeEvent(((SummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SummaryTableRowChanging != null)) {
                    this.SummaryTableRowChanging(this, new SummaryTableRowChangeEvent(((SummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SummaryTableRowDeleted != null)) {
                    this.SummaryTableRowDeleted(this, new SummaryTableRowChangeEvent(((SummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SummaryTableRowDeleting != null)) {
                    this.SummaryTableRowDeleting(this, new SummaryTableRowChangeEvent(((SummaryTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSummaryTableRow(SummaryTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PortfolioSet ds = new PortfolioSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SummaryTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PortfolioTableRow : global::System.Data.DataRow {
            
            private PortfolioTableDataTable tablePortfolioTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PortfolioTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePortfolioTable = ((PortfolioTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Index {
                get {
                    return ((int)(this[this.tablePortfolioTable.IndexColumn]));
                }
                set {
                    this[this.tablePortfolioTable.IndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Stock {
                get {
                    try {
                        return ((string)(this[this.tablePortfolioTable.StockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stock\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.StockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tablePortfolioTable.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double StockLastPrice {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.StockLastPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockLastPrice\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.StockLastPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double StockImpVolatility {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.StockImpVolatilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockImpVolatility\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.StockImpVolatilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double StockHisVolatility {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.StockHisVolatilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockHisVolatility\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.StockHisVolatilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePortfolioTable.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime EndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePortfolioTable.EndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDate\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetInvestment {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.NetInvestmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetInvestment\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.NetInvestmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaxProfitPotential {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.MaxProfitPotentialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxProfitPotential\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.MaxProfitPotentialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaxProfitPotentialPrc {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.MaxProfitPotentialPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxProfitPotentialPrc\' in table \'PortfolioTable\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.MaxProfitPotentialPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaxLossRisk {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.MaxLossRiskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxLossRisk\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.MaxLossRiskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaxLossRiskPrc {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.MaxLossRiskPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxLossRiskPrc\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.MaxLossRiskPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LowerBreakeven {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.LowerBreakevenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LowerBreakeven\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.LowerBreakevenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UpperBreakeven {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.UpperBreakevenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpperBreakeven\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.UpperBreakevenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double BreakevenProb {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.BreakevenProbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BreakevenProb\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.BreakevenProbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double BreakevenPrice {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.BreakevenPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BreakevenPrice\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.BreakevenPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ReturnIfUnchange {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.ReturnIfUnchangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnIfUnchange\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.ReturnIfUnchangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ReturnIfUnchangePrc {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.ReturnIfUnchangePrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnIfUnchangePrc\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.ReturnIfUnchangePrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentReturn {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.CurrentReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentReturn\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.CurrentReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrentReturnPrc {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.CurrentReturnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentReturnPrc\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.CurrentReturnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ReturnAtTarget {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.ReturnAtTargetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnAtTarget\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.ReturnAtTargetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ReturnAtTargetPrc {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.ReturnAtTargetPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnAtTargetPrc\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.ReturnAtTargetPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ExpectedReturn {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.ExpectedReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpectedReturn\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.ExpectedReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ExpectedReturnPrc {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.ExpectedReturnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpectedReturnPrc\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.ExpectedReturnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double InterestPaid {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.InterestPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterestPaid\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.InterestPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalDelta {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.TotalDeltaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDelta\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.TotalDeltaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalGamma {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.TotalGammaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalGamma\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.TotalGammaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalTheta {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.TotalThetaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTheta\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.TotalThetaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalVega {
                get {
                    try {
                        return ((double)(this[this.tablePortfolioTable.TotalVegaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalVega\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.TotalVegaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tablePortfolioTable.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OpoFile {
                get {
                    return ((string)(this[this.tablePortfolioTable.OpoFileColumn]));
                }
                set {
                    this[this.tablePortfolioTable.OpoFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PortfolioMembership {
                get {
                    try {
                        return ((string)(this[this.tablePortfolioTable.PortfolioMembershipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PortfolioMembership\' in table \'PortfolioTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePortfolioTable.PortfolioMembershipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStockNull() {
                return this.IsNull(this.tablePortfolioTable.StockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStockNull() {
                this[this.tablePortfolioTable.StockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tablePortfolioTable.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tablePortfolioTable.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStockLastPriceNull() {
                return this.IsNull(this.tablePortfolioTable.StockLastPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStockLastPriceNull() {
                this[this.tablePortfolioTable.StockLastPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStockImpVolatilityNull() {
                return this.IsNull(this.tablePortfolioTable.StockImpVolatilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStockImpVolatilityNull() {
                this[this.tablePortfolioTable.StockImpVolatilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStockHisVolatilityNull() {
                return this.IsNull(this.tablePortfolioTable.StockHisVolatilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStockHisVolatilityNull() {
                this[this.tablePortfolioTable.StockHisVolatilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStartDateNull() {
                return this.IsNull(this.tablePortfolioTable.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStartDateNull() {
                this[this.tablePortfolioTable.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEndDateNull() {
                return this.IsNull(this.tablePortfolioTable.EndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEndDateNull() {
                this[this.tablePortfolioTable.EndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetInvestmentNull() {
                return this.IsNull(this.tablePortfolioTable.NetInvestmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetInvestmentNull() {
                this[this.tablePortfolioTable.NetInvestmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxProfitPotentialNull() {
                return this.IsNull(this.tablePortfolioTable.MaxProfitPotentialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxProfitPotentialNull() {
                this[this.tablePortfolioTable.MaxProfitPotentialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxProfitPotentialPrcNull() {
                return this.IsNull(this.tablePortfolioTable.MaxProfitPotentialPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxProfitPotentialPrcNull() {
                this[this.tablePortfolioTable.MaxProfitPotentialPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxLossRiskNull() {
                return this.IsNull(this.tablePortfolioTable.MaxLossRiskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxLossRiskNull() {
                this[this.tablePortfolioTable.MaxLossRiskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxLossRiskPrcNull() {
                return this.IsNull(this.tablePortfolioTable.MaxLossRiskPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxLossRiskPrcNull() {
                this[this.tablePortfolioTable.MaxLossRiskPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLowerBreakevenNull() {
                return this.IsNull(this.tablePortfolioTable.LowerBreakevenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLowerBreakevenNull() {
                this[this.tablePortfolioTable.LowerBreakevenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpperBreakevenNull() {
                return this.IsNull(this.tablePortfolioTable.UpperBreakevenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpperBreakevenNull() {
                this[this.tablePortfolioTable.UpperBreakevenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBreakevenProbNull() {
                return this.IsNull(this.tablePortfolioTable.BreakevenProbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBreakevenProbNull() {
                this[this.tablePortfolioTable.BreakevenProbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBreakevenPriceNull() {
                return this.IsNull(this.tablePortfolioTable.BreakevenPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBreakevenPriceNull() {
                this[this.tablePortfolioTable.BreakevenPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReturnIfUnchangeNull() {
                return this.IsNull(this.tablePortfolioTable.ReturnIfUnchangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReturnIfUnchangeNull() {
                this[this.tablePortfolioTable.ReturnIfUnchangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReturnIfUnchangePrcNull() {
                return this.IsNull(this.tablePortfolioTable.ReturnIfUnchangePrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReturnIfUnchangePrcNull() {
                this[this.tablePortfolioTable.ReturnIfUnchangePrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentReturnNull() {
                return this.IsNull(this.tablePortfolioTable.CurrentReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentReturnNull() {
                this[this.tablePortfolioTable.CurrentReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentReturnPrcNull() {
                return this.IsNull(this.tablePortfolioTable.CurrentReturnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentReturnPrcNull() {
                this[this.tablePortfolioTable.CurrentReturnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReturnAtTargetNull() {
                return this.IsNull(this.tablePortfolioTable.ReturnAtTargetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReturnAtTargetNull() {
                this[this.tablePortfolioTable.ReturnAtTargetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReturnAtTargetPrcNull() {
                return this.IsNull(this.tablePortfolioTable.ReturnAtTargetPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReturnAtTargetPrcNull() {
                this[this.tablePortfolioTable.ReturnAtTargetPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpectedReturnNull() {
                return this.IsNull(this.tablePortfolioTable.ExpectedReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpectedReturnNull() {
                this[this.tablePortfolioTable.ExpectedReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpectedReturnPrcNull() {
                return this.IsNull(this.tablePortfolioTable.ExpectedReturnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpectedReturnPrcNull() {
                this[this.tablePortfolioTable.ExpectedReturnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInterestPaidNull() {
                return this.IsNull(this.tablePortfolioTable.InterestPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInterestPaidNull() {
                this[this.tablePortfolioTable.InterestPaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalDeltaNull() {
                return this.IsNull(this.tablePortfolioTable.TotalDeltaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalDeltaNull() {
                this[this.tablePortfolioTable.TotalDeltaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalGammaNull() {
                return this.IsNull(this.tablePortfolioTable.TotalGammaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalGammaNull() {
                this[this.tablePortfolioTable.TotalGammaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalThetaNull() {
                return this.IsNull(this.tablePortfolioTable.TotalThetaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalThetaNull() {
                this[this.tablePortfolioTable.TotalThetaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalVegaNull() {
                return this.IsNull(this.tablePortfolioTable.TotalVegaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalVegaNull() {
                this[this.tablePortfolioTable.TotalVegaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tablePortfolioTable.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesNull() {
                this[this.tablePortfolioTable.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPortfolioMembershipNull() {
                return this.IsNull(this.tablePortfolioTable.PortfolioMembershipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPortfolioMembershipNull() {
                this[this.tablePortfolioTable.PortfolioMembershipColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SummaryTableRow : global::System.Data.DataRow {
            
            private SummaryTableDataTable tableSummaryTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SummaryTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSummaryTable = ((SummaryTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Index {
                get {
                    return ((int)(this[this.tableSummaryTable.IndexColumn]));
                }
                set {
                    this[this.tableSummaryTable.IndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Criteria {
                get {
                    return ((string)(this[this.tableSummaryTable.CriteriaColumn]));
                }
                set {
                    this[this.tableSummaryTable.CriteriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Total {
                get {
                    try {
                        return ((double)(this[this.tableSummaryTable.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'SummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSummaryTable.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TotalPrc {
                get {
                    try {
                        return ((double)(this[this.tableSummaryTable.TotalPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPrc\' in table \'SummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSummaryTable.TotalPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCredit {
                get {
                    try {
                        return ((bool)(this[this.tableSummaryTable.IsCreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCredit\' in table \'SummaryTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSummaryTable.IsCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalNull() {
                return this.IsNull(this.tableSummaryTable.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalNull() {
                this[this.tableSummaryTable.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalPrcNull() {
                return this.IsNull(this.tableSummaryTable.TotalPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalPrcNull() {
                this[this.tableSummaryTable.TotalPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsCreditNull() {
                return this.IsNull(this.tableSummaryTable.IsCreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsCreditNull() {
                this[this.tableSummaryTable.IsCreditColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PortfolioTableRowChangeEvent : global::System.EventArgs {
            
            private PortfolioTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioTableRowChangeEvent(PortfolioTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PortfolioTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SummaryTableRowChangeEvent : global::System.EventArgs {
            
            private SummaryTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SummaryTableRowChangeEvent(SummaryTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SummaryTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591